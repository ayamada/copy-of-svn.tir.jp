diff -urN fluxbox-0.9.9.orig/src/CurrentWindowCmd.cc fluxbox-0.9.9/src/CurrentWindowCmd.cc
--- fluxbox-0.9.9.orig/src/CurrentWindowCmd.cc	2004-02-21 04:40:31.000000000 +0900
+++ fluxbox-0.9.9/src/CurrentWindowCmd.cc	2004-05-10 21:37:01.000000000 +0900
@@ -85,6 +85,54 @@
       fbwindow().y() + m_step_size_y);
 }
 
+ClingCmd::ClingCmd(const Direction direction) :
+  m_direction(direction) { }
+
+void ClingCmd::real_execute() {
+  int head = fbwindow().screen().getHead(fbwindow().parent());
+  //int border = fbwindow().parent().borderWidth();
+  int border = 1;
+  switch (m_direction) {
+    case CLING_LEFT:
+      fbwindow().move(fbwindow().screen().maxLeft(head),
+		      fbwindow().y());
+      break;
+    case CLING_RIGHT:
+      fbwindow().move(fbwindow().screen().maxRight(head)
+			  - fbwindow().screen().maxLeft(head)
+			  - border * 2
+			  - fbwindow().width(),
+		      fbwindow().y());
+      break;
+    case CLING_UP:
+      fbwindow().move(fbwindow().x(),
+		      fbwindow().screen().maxTop(head));
+      break;
+    case CLING_DOWN:
+      fbwindow().move(fbwindow().x(),
+		      fbwindow().screen().maxBottom(head)
+			  - fbwindow().screen().maxTop(head)
+			  - border * 2
+			  - fbwindow().height()
+			  //- fbwindow().frame().titlebarHeight()
+			  );
+      break;
+    case CLING_CENTER:
+      fbwindow().move((fbwindow().screen().maxRight(head)
+			  - fbwindow().screen().maxLeft(head)
+			  - border * 2
+			  - fbwindow().width()
+			  ) / 2,
+		      (fbwindow().screen().maxBottom(head)
+			  - fbwindow().screen().maxTop(head)
+			  - border * 2
+			  - fbwindow().height()
+			  //- fbwindow().frame().titlebarHeight()
+			  ) / 2);
+      break;
+  }
+}
+
 ResizeCmd::ResizeCmd(const int step_size_x, const int step_size_y) :
   m_step_size_x(step_size_x), m_step_size_y(step_size_y) { }
 
diff -urN fluxbox-0.9.9.orig/src/CurrentWindowCmd.hh fluxbox-0.9.9/src/CurrentWindowCmd.hh
--- fluxbox-0.9.9.orig/src/CurrentWindowCmd.hh	2004-02-21 04:40:31.000000000 +0900
+++ fluxbox-0.9.9/src/CurrentWindowCmd.hh	2004-05-10 02:20:10.000000000 +0900
@@ -99,6 +99,24 @@
     const int m_step_size_y;
 };
 
+// cling cmd, absolute position
+class ClingCmd: public WindowHelperCmd {
+public:
+    enum Direction {
+        CLING_LEFT   = (1<<0),
+        CLING_RIGHT  = (1<<1),
+        CLING_UP     = (1<<2),
+        CLING_DOWN   = (1<<3),
+        CLING_CENTER = (1<<4)
+    };
+    explicit ClingCmd(const Direction direction);
+protected:
+    void real_execute();
+
+private:
+    const Direction m_direction;
+};
+
 // resize cmd, relative size
 class ResizeCmd: public WindowHelperCmd{
 public:
diff -urN fluxbox-0.9.9.orig/src/FbCommandFactory.cc fluxbox-0.9.9/src/FbCommandFactory.cc
--- fluxbox-0.9.9.orig/src/FbCommandFactory.cc	2004-05-09 23:55:41.000000000 +0900
+++ fluxbox-0.9.9/src/FbCommandFactory.cc	2004-05-10 01:01:41.000000000 +0900
@@ -125,6 +125,11 @@
         "windowmenu",
         "workspace",
         "workspacemenu",
+        "clingleft",
+        "clingright",
+        "clingup",
+        "clingdown",
+        "clingcenter",
         ""
     };
 
@@ -224,6 +229,16 @@
         return new MoveCmd(0,-atoi(arguments.c_str()));
     else if (command == "movedown")
         return new MoveCmd(0,atoi(arguments.c_str()));
+    else if (command == "clingleft")
+        return new ClingCmd(ClingCmd::CLING_LEFT);
+    else if (command == "clingright")
+        return new ClingCmd(ClingCmd::CLING_RIGHT);
+    else if (command == "clingup")
+        return new ClingCmd(ClingCmd::CLING_UP);
+    else if (command == "clingdown")
+        return new ClingCmd(ClingCmd::CLING_DOWN);
+    else if (command == "clingcenter")
+        return new ClingCmd(ClingCmd::CLING_CENTER);
     else if (command == "raise")
         return new CurrentWindowCmd(&FluxboxWindow::raise);
     else if (command == "lower")
