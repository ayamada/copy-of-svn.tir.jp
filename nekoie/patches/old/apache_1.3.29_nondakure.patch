diff -urN apache_1.3.29/apache.css apache_1.3.29_patched/apache.css
--- apache_1.3.29/apache.css	1970-01-01 09:00:00.000000000 +0900
+++ apache_1.3.29_patched/apache.css	2003-11-01 20:35:04.000000000 +0900
@@ -0,0 +1,164 @@
+/* ---- base ---- */
+
+
+body { background-color:#dfdfdf; color:#3f3f5f; font-size:90%; font-family:times; margin:0; padding:1em 0; }
+a:link { color:#0f1fff; text-decoration:underline; }
+a:visited { color:#3f5fbf; text-decoration:underline; }
+a:hover { background-color:#1f1f7f; color:#efefef; text-decoration:none; }
+a:active { background-color:#1f1f1f !important; color:#0f1fff !important; text-decoration:none !important; }
+
+
+
+/* ---- default ---- */
+
+ins { text-decoration:none; background-color:#ffffff; color:#000000; }
+del { text-decoration:line-through; background-color:#000000; color:#000000; }
+
+a { font-weight:bold; }
+img { border:0 none; }
+br {  }
+q {  }
+sub {  }
+sup {  }
+span {  }
+bdo {  }
+
+tt { font-weight:normal !important; }
+i { font-style:italic; }
+b { font-weight:bold; }
+big { font-size:200%; }
+small { font-size:50%; }
+u { text-decoration:underline; }
+s, strike { text-decoration:line-through; }
+
+em { margin:0.1em; padding:0.1em; font-weight:bold; font-style:normal; }
+strong { margin:0.1em; padding:0.1em; background-color:#ffffff; color:#ff0000; font-weight:bolder; }
+
+dfn {  }
+code {  }
+samp {  }
+kbd { background-color:#bfbfbf; color:#000000; margin:2px; padding:4px 2px; border-left:2px outset #000000; border-top:2px outset #000000; border-right:4px outset #000000; border-bottom:3px outset #000000; }
+var {  }
+cite {  }
+abbr {  }
+acronym {  }
+
+p { margin:1.5em 1em; line-height: 1.5em; }
+
+h1, h2, h3, h4, h5, h6 { padding:0.5em 1em; border-left:0 none; border-right:0 none; border-top:4px double; border-bottom:4px double; background-color:#00003f; color:#bfbfff; text-align:center; margin:1em 0; }
+h1 { font-size:225%; }
+h2 { font-size:200%; }
+h3 { font-size:175%; }
+h4 { font-size:150%; }
+h5 { font-size:125%; }
+h6 { font-size:100%; }
+
+blockquote { font-style:italic; }
+address { font-size:80%; font-family:times; font-style:normal; font-weight:bold; margin:1px 1em; text-align:right; }
+div {  }
+hr {  }
+hr.bottom { clear:both; }
+hr.invisible { display:none; }
+
+pre { font-weight:normal !important; }
+
+ol { margin-left:4em; margin-right:1em; margin-top:1em; margin-bottom:1em; }
+ul { margin-left:4em; margin-right:1em; margin-top:1em; margin-bottom:1em; }
+li { margin-top:0.2em; margin-bottom:0.2em; line-height: 1.5em; }
+dl { margin-top:0.2em; margin-bottom:0.2em; }
+dt { margin-left:2em; margin-right:1em; margin-top:1em; margin-bottom:0.5em; font-weight:bold; font-size:120%; line-height: 1.5em; }
+dd { margin-left:4em; margin-right:1em; margin-top:0.5em; margin-bottom:0.5em; line-height: 1.5em; }
+
+
+
+
+/* ---- form ---- */
+
+form { margin:2em; padding:1em; border:4px double #ffffff; background-color:#00003f; color:#bfbfbf; }
+fieldset { background-color:#3f3f3f; color:#efefef; }
+legend { font-size:150%; }
+optgroup { background-color:#3f3f3f; color:#efefef; }
+label { font-weight:bold; }
+input { background-color:#0f0f0f; color:#efefef; }
+select { background-color:#0f0f0f; color:#efefef; }
+option { background-color:#0f0f0f; color:#efefef; }
+textarea { background-color:#0f0f0f; color:#efefef; }
+button { background-color:#0f0f0f; color:#efefef; }
+
+
+
+
+/* ---- table ---- */
+
+table {  }
+caption {  }
+colgroup {  }
+col {  }
+thead {  }
+tfoot {  }
+tbody {  }
+tr {  }
+td {  }
+th {  }
+
+
+
+
+
+
+
+
+/* ---- frame ---- */
+
+/* frameset {} */
+/* frame {} */
+/* noframes {} */
+
+/* iframe {} */
+
+
+
+
+/* ---- optional ---- */
+
+/* object {} */
+/* applet {} */
+
+
+
+
+/* ---- deprecated-tags ---- */
+
+/* font { display:none; } */
+
+/* center { display:none; } */
+
+/* dir { display:none; } */
+/* menu { display:none; } */
+
+
+
+
+/* ---- ineffective ---- */
+
+/* html {} */
+/* head {} */
+
+/* title {} */
+/* base {} */
+/* isindex {} */
+
+/* link {} */
+/* meta {} */
+/* style {} */
+
+/* script {} */
+/* noscript {} */
+/* param {} */
+
+/* map {} */
+/* area {} */
+
+/* basefont {} */
+
+
diff -urN apache_1.3.29/icons/apache.css apache_1.3.29_patched/icons/apache.css
--- apache_1.3.29/icons/apache.css	1970-01-01 09:00:00.000000000 +0900
+++ apache_1.3.29_patched/icons/apache.css	2003-11-01 20:34:54.000000000 +0900
@@ -0,0 +1,164 @@
+/* ---- base ---- */
+
+
+body { background-color:#dfdfdf; color:#3f3f5f; font-size:90%; font-family:times; margin:0; padding:1em 0; }
+a:link { color:#0f1fff; text-decoration:underline; }
+a:visited { color:#3f5fbf; text-decoration:underline; }
+a:hover { background-color:#1f1f7f; color:#efefef; text-decoration:none; }
+a:active { background-color:#1f1f1f !important; color:#0f1fff !important; text-decoration:none !important; }
+
+
+
+/* ---- default ---- */
+
+ins { text-decoration:none; background-color:#ffffff; color:#000000; }
+del { text-decoration:line-through; background-color:#000000; color:#000000; }
+
+a { font-weight:bold; }
+img { border:0 none; }
+br {  }
+q {  }
+sub {  }
+sup {  }
+span {  }
+bdo {  }
+
+tt { font-weight:normal !important; }
+i { font-style:italic; }
+b { font-weight:bold; }
+big { font-size:200%; }
+small { font-size:50%; }
+u { text-decoration:underline; }
+s, strike { text-decoration:line-through; }
+
+em { margin:0.1em; padding:0.1em; font-weight:bold; font-style:normal; }
+strong { margin:0.1em; padding:0.1em; background-color:#ffffff; color:#ff0000; font-weight:bolder; }
+
+dfn {  }
+code {  }
+samp {  }
+kbd { background-color:#bfbfbf; color:#000000; margin:2px; padding:4px 2px; border-left:2px outset #000000; border-top:2px outset #000000; border-right:4px outset #000000; border-bottom:3px outset #000000; }
+var {  }
+cite {  }
+abbr {  }
+acronym {  }
+
+p { margin:1.5em 1em; }
+
+h1, h2, h3, h4, h5, h6 { padding:0.5em 1em; border-left:0 none; border-right:0 none; border-top:4px double; border-bottom:4px double; background-color:#00003f; color:#bfbfff; text-align:center; margin:1em 0; }
+h1 { font-size:225%; }
+h2 { font-size:200%; }
+h3 { font-size:175%; }
+h4 { font-size:150%; }
+h5 { font-size:125%; }
+h6 { font-size:100%; }
+
+blockquote { font-style:italic; }
+address { font-size:80%; font-family:times; font-style:normal; font-weight:bold; margin:1px 1em; text-align:right; }
+div {  }
+hr {  }
+hr.bottom { clear:both; }
+hr.invisible { display:none; }
+
+pre { font-weight:normal !important; }
+
+ol { margin-left:4em; margin-right:4em; margin-top:1em; margin-bottom:1em; }
+ul { margin-left:4em; margin-right:4em; margin-top:1em; margin-bottom:1em; }
+li { margin-top:0.2em; margin-bottom:0.2em; }
+dl { margin-top:0.2em; margin-bottom:0.2em; }
+dt { margin-left:2em; margin-right:2em; margin-top:1em; margin-bottom:0.5em; font-weight:bold; font-size:120%; }
+dd { margin-left:4em; margin-right:4em; margin-top:0.5em; margin-bottom:0.5em; }
+
+
+
+
+/* ---- form ---- */
+
+form { margin:2em; padding:1em; border:4px double #ffffff; background-color:#00003f; color:#bfbfbf; }
+fieldset { background-color:#3f3f3f; color:#efefef; }
+legend { font-size:150%; }
+optgroup { background-color:#3f3f3f; color:#efefef; }
+label { font-weight:bold; }
+input { background-color:#0f0f0f; color:#efefef; }
+select { background-color:#0f0f0f; color:#efefef; }
+option { background-color:#0f0f0f; color:#efefef; }
+textarea { background-color:#0f0f0f; color:#efefef; }
+button { background-color:#0f0f0f; color:#efefef; }
+
+
+
+
+/* ---- table ---- */
+
+table {  }
+caption {  }
+colgroup {  }
+col {  }
+thead {  }
+tfoot {  }
+tbody {  }
+tr {  }
+td {  }
+th {  }
+
+
+
+
+
+
+
+
+/* ---- frame ---- */
+
+/* frameset {} */
+/* frame {} */
+/* noframes {} */
+
+/* iframe {} */
+
+
+
+
+/* ---- optional ---- */
+
+/* object {} */
+/* applet {} */
+
+
+
+
+/* ---- deprecated-tags ---- */
+
+/* font { display:none; } */
+
+/* center { display:none; } */
+
+/* dir { display:none; } */
+/* menu { display:none; } */
+
+
+
+
+/* ---- ineffective ---- */
+
+/* html {} */
+/* head {} */
+
+/* title {} */
+/* base {} */
+/* isindex {} */
+
+/* link {} */
+/* meta {} */
+/* style {} */
+
+/* script {} */
+/* noscript {} */
+/* param {} */
+
+/* map {} */
+/* area {} */
+
+/* basefont {} */
+
+
diff -urN apache_1.3.29/src/include/httpd.h apache_1.3.29_patched/src/include/httpd.h
--- apache_1.3.29/src/include/httpd.h	2003-10-25 01:11:40.000000000 +0900
+++ apache_1.3.29_patched/src/include/httpd.h	2003-11-01 20:34:54.000000000 +0900
@@ -609,6 +609,9 @@
 #define DOCTYPE_HTML_4_0F "<!DOCTYPE HTML PUBLIC \"-//W3C//" \
                           "DTD HTML 4.0 Frameset//EN\"\n" \
                           "\"http://www.w3.org/TR/REC-html40/frameset.dtd\">\n"
+#define DOCTYPE_HTML_4_01T "<!DOCTYPE HTML PUBLIC \"-//W3C//" \
+                           "DTD HTML 4.01 Transitional//EN\"\n" \
+                           "\"http://www.w3.org/TR/html4/loose.dtd\">\n"
 
 /* Just in case your linefeed isn't the one the other end is expecting. */
 #ifndef CHARSET_EBCDIC
diff -urN apache_1.3.29/src/main/http_core.c apache_1.3.29_patched/src/main/http_core.c
--- apache_1.3.29/src/main/http_core.c	2003-10-19 22:20:57.000000000 +0900
+++ apache_1.3.29_patched/src/main/http_core.c	2003-11-01 20:34:54.000000000 +0900
@@ -2760,18 +2760,18 @@
     ap_snprintf(sport, sizeof sport, "%u", (unsigned) ap_get_server_port(r));
 
     if (conf->server_signature == srv_sig_withmail) {
-	return ap_pstrcat(r->pool, prefix, "<ADDRESS>" SERVER_BASEVERSION
-			  " Server at <A HREF=\"mailto:",
+	return ap_pstrcat(r->pool, prefix, "<address>" SERVER_BASEVERSION
+			  " Server at <a href=\"mailto:",
 			  r->server->server_admin, "\">",
 			  ap_escape_html(r->pool, ap_get_server_name(r)), 
-			  "</A> Port ", sport,
-			  "</ADDRESS>\n", NULL);
+			  "</a> Port ", sport,
+			  "</address>\n", NULL);
     }
-    return ap_pstrcat(r->pool, prefix, "<ADDRESS>" SERVER_BASEVERSION
+    return ap_pstrcat(r->pool, prefix, "<address>" SERVER_BASEVERSION
 		      " Server at ", 
 		      ap_escape_html(r->pool, ap_get_server_name(r)), 
 		      " Port ", sport,
-		      "</ADDRESS>\n", NULL);
+		      "</address>\n", NULL);
 }
 
 /*
diff -urN apache_1.3.29/src/main/http_protocol.c apache_1.3.29_patched/src/main/http_protocol.c
--- apache_1.3.29/src/main/http_protocol.c	2003-02-04 02:13:22.000000000 +0900
+++ apache_1.3.29_patched/src/main/http_protocol.c	2003-11-01 20:34:54.000000000 +0900
@@ -2919,69 +2919,69 @@
         h1 = &title[4];
 
         ap_rvputs(r,
-                  DOCTYPE_HTML_2_0
-                  "<HTML><HEAD>\n<TITLE>", title,
-                  "</TITLE>\n</HEAD><BODY>\n<H1>", h1, "</H1>\n",
+                  DOCTYPE_HTML_4_01T
+                  "<html>\n<head>\n<meta name=\"ROBOTS\" content=\"NOINDEX,NOFOLLOW\">\n<title>", title, "</title>\n",
+                  "<link rel=\"stylesheet\" type=\"text/css\" href=\"/icons/apache.css\">\n</head>\n<body>\n<h1>", h1, "</h1>\n",
                   NULL);
 
 	switch (status) {
 	case HTTP_MOVED_PERMANENTLY:
 	case HTTP_MOVED_TEMPORARILY:
 	case HTTP_TEMPORARY_REDIRECT:
-	    ap_rvputs(r, "The document has moved <A HREF=\"",
-		      ap_escape_html(r->pool, location), "\">here</A>.<P>\n",
+	    ap_rvputs(r, "<p>The document has moved <a href=\"",
+		      ap_escape_html(r->pool, location), "\">here</a>.</p>\n",
 		      NULL);
 	    break;
 	case HTTP_SEE_OTHER:
-	    ap_rvputs(r, "The answer to your request is located <A HREF=\"",
-		      ap_escape_html(r->pool, location), "\">here</A>.<P>\n",
+	    ap_rvputs(r, "<p>The answer to your request is located <a href=\"",
+		      ap_escape_html(r->pool, location), "\">here</a>.</p>\n",
 		      NULL);
 	    break;
 	case HTTP_USE_PROXY:
-	    ap_rvputs(r, "This resource is only accessible "
+	    ap_rvputs(r, "<p>This resource is only accessible "
 		      "through the proxy\n",
 		      ap_escape_html(r->pool, location),
-		      "<BR>\nYou will need to ",
-		      "configure your client to use that proxy.<P>\n", NULL);
+		      "<br>\nYou will need to ",
+		      "configure your client to use that proxy.</p>\n", NULL);
 	    break;
 	case HTTP_PROXY_AUTHENTICATION_REQUIRED:
 	case AUTH_REQUIRED:
-	    ap_rputs("This server could not verify that you\n"
+	    ap_rputs("<p>This server could not verify that you\n"
 	             "are authorized to access the document\n"
 	             "requested.  Either you supplied the wrong\n"
 	             "credentials (e.g., bad password), or your\n"
 	             "browser doesn't understand how to supply\n"
-	             "the credentials required.<P>\n", r);
+	             "the credentials required.</p>\n", r);
 	    break;
 	case BAD_REQUEST:
-	    ap_rputs("Your browser sent a request that "
-	             "this server could not understand.<P>\n", r);
+	    ap_rputs("<p>Your browser sent a request that "
+	             "this server could not understand.</p>\n", r);
 	    if ((error_notes = ap_table_get(r->notes, "error-notes")) != NULL) {
-		ap_rvputs(r, error_notes, "<P>\n", NULL);
+		ap_rvputs(r, "<p>", error_notes, "</p>\n", NULL);
 	    }
 	    break;
 	case HTTP_FORBIDDEN:
-	    ap_rvputs(r, "You don't have permission to access ",
+	    ap_rvputs(r, "<p>You don't have permission to access ",
 		      ap_escape_html(r->pool, r->uri),
-		      "\non this server.<P>\n", NULL);
+		      "\non this server.</p>\n", NULL);
 	    break;
 	case NOT_FOUND:
-	    ap_rvputs(r, "The requested URL ",
+	    ap_rvputs(r, "<p>The requested URL ",
 		      ap_escape_html(r->pool, r->uri),
-		      " was not found on this server.<P>\n", NULL);
+		      " was not found on this server.</p>\n", NULL);
 	    break;
 	case METHOD_NOT_ALLOWED:
-	    ap_rvputs(r, "The requested method ", r->method,
+	    ap_rvputs(r, "<p>The requested method ", r->method,
 		      " is not allowed "
 		      "for the URL ", ap_escape_html(r->pool, r->uri),
-		      ".<P>\n", NULL);
+		      ".</p>\n", NULL);
 	    break;
 	case NOT_ACCEPTABLE:
 	    ap_rvputs(r,
-		      "An appropriate representation of the "
+		      "<p>An appropriate representation of the "
 		      "requested resource ",
 		      ap_escape_html(r->pool, r->uri),
-		      " could not be found on this server.<P>\n", NULL);
+		      " could not be found on this server.</p>\n", NULL);
 	    /* fall through */
 	case MULTIPLE_CHOICES:
 	    {
@@ -2991,114 +2991,114 @@
 	    }
 	    break;
 	case LENGTH_REQUIRED:
-	    ap_rvputs(r, "A request of the requested method ", r->method,
-		      " requires a valid Content-length.<P>\n", NULL);
+	    ap_rvputs(r, "<p>A request of the requested method ", r->method,
+		      " requires a valid Content-length.</p>\n", NULL);
 	    if ((error_notes = ap_table_get(r->notes, "error-notes")) != NULL) {
-		ap_rvputs(r, error_notes, "<P>\n", NULL);
+		ap_rvputs(r, "<p>", error_notes, "</p>\n", NULL);
 	    }
 	    break;
 	case PRECONDITION_FAILED:
-	    ap_rvputs(r, "The precondition on the request for the URL ",
+	    ap_rvputs(r, "<p>The precondition on the request for the URL ",
 		      ap_escape_html(r->pool, r->uri),
-		      " evaluated to false.<P>\n", NULL);
+		      " evaluated to false.</p>\n", NULL);
 	    break;
 	case HTTP_NOT_IMPLEMENTED:
-	    ap_rvputs(r, ap_escape_html(r->pool, r->method), " to ",
+	    ap_rvputs(r, "<p>", ap_escape_html(r->pool, r->method), " to ",
 		      ap_escape_html(r->pool, r->uri),
-		      " not supported.<P>\n", NULL);
+		      " not supported.</p>\n", NULL);
 	    if ((error_notes = ap_table_get(r->notes, "error-notes")) != NULL) {
-		ap_rvputs(r, error_notes, "<P>\n", NULL);
+		ap_rvputs(r, "<p>", error_notes, "</p>\n", NULL);
 	    }
 	    break;
 	case BAD_GATEWAY:
-	    ap_rputs("The proxy server received an invalid" CRLF
-	             "response from an upstream server.<P>" CRLF, r);
+	    ap_rputs("<p>The proxy server received an invalid" CRLF
+	             "response from an upstream server.</p>" CRLF, r);
 	    if ((error_notes = ap_table_get(r->notes, "error-notes")) != NULL) {
-		ap_rvputs(r, error_notes, "<P>\n", NULL);
+		ap_rvputs(r, "<p>", error_notes, "</p>\n", NULL);
 	    }
 	    break;
 	case VARIANT_ALSO_VARIES:
-	    ap_rvputs(r, "A variant for the requested resource\n<PRE>\n",
+	    ap_rvputs(r, "<p>A variant for the requested resource</p>\n<pre>\n",
 		      ap_escape_html(r->pool, r->uri),
-		      "\n</PRE>\nis itself a negotiable resource. "
-		      "This indicates a configuration error.<P>\n", NULL);
+		      "\n</pre>\n<p>is itself a negotiable resource. "
+		      "This indicates a configuration error.</p>\n", NULL);
 	    break;
 	case HTTP_REQUEST_TIME_OUT:
-	    ap_rputs("Server timeout waiting for the HTTP request from the client.\n", r);
+	    ap_rputs("<p>Server timeout waiting for the HTTP request from the client.</p>\n", r);
 	    break;
 	case HTTP_GONE:
-	    ap_rvputs(r, "The requested resource<BR>",
+	    ap_rvputs(r, "<p>The requested resource<br>",
 		      ap_escape_html(r->pool, r->uri),
-		      "<BR>\nis no longer available on this server ",
+		      "<br>\nis no longer available on this server ",
 		      "and there is no forwarding address.\n",
-		      "Please remove all references to this resource.\n",
+		      "Please remove all references to this resource.</p>\n",
 		      NULL);
 	    break;
 	case HTTP_REQUEST_ENTITY_TOO_LARGE:
-	    ap_rvputs(r, "The requested resource<BR>",
-		      ap_escape_html(r->pool, r->uri), "<BR>\n",
+	    ap_rvputs(r, "<p>The requested resource<br>",
+		      ap_escape_html(r->pool, r->uri), "<br>\n",
 		      "does not allow request data with ", r->method,
 		      " requests, or the amount of data provided in\n",
-		      "the request exceeds the capacity limit.\n", NULL);
+		      "the request exceeds the capacity limit.</p>\n", NULL);
 	    break;
 	case HTTP_REQUEST_URI_TOO_LARGE:
-	    ap_rputs("The requested URL's length exceeds the capacity\n"
-	             "limit for this server.<P>\n", r);
+	    ap_rputs("<p>The requested URL's length exceeds the capacity\n"
+	             "limit for this server.</p>\n", r);
 	    if ((error_notes = ap_table_get(r->notes, "error-notes")) != NULL) {
-		ap_rvputs(r, error_notes, "<P>\n", NULL);
+		ap_rvputs(r, "<p>", error_notes, "</p>\n", NULL);
 	    }
 	    break;
 	case HTTP_UNSUPPORTED_MEDIA_TYPE:
-	    ap_rputs("The supplied request data is not in a format\n"
-	             "acceptable for processing by this resource.\n", r);
+	    ap_rputs("<p>The supplied request data is not in a format\n"
+	             "acceptable for processing by this resource.</p>\n", r);
 	    break;
 	case HTTP_RANGE_NOT_SATISFIABLE:
-	    ap_rputs("None of the range-specifier values in the Range\n"
+	    ap_rputs("<p>None of the range-specifier values in the Range\n"
 	             "request-header field overlap the current extent\n"
-	             "of the selected resource.\n", r);
+	             "of the selected resource.</p>\n", r);
 	    break;
 	case HTTP_EXPECTATION_FAILED:
-	    ap_rvputs(r, "The expectation given in the Expect request-header"
-	              "\nfield could not be met by this server.<P>\n"
-	              "The client sent<PRE>\n    Expect: ",
-	              ap_table_get(r->headers_in, "Expect"), "\n</PRE>\n"
-	              "but we only allow the 100-continue expectation.\n",
+	    ap_rvputs(r, "<p>The expectation given in the Expect request-header"
+	              "\nfield could not be met by this server.</p>\n"
+	              "<p>The client sent</p>\n<pre>\n    Expect: ",
+	              ap_table_get(r->headers_in, "Expect"), "\n</pre>\n"
+	              "<p>but we only allow the 100-continue expectation.</p>\n",
 	              NULL);
 	    break;
 	case HTTP_UNPROCESSABLE_ENTITY:
-	    ap_rputs("The server understands the media type of the\n"
+	    ap_rputs("<p>The server understands the media type of the\n"
 	             "request entity, but was unable to process the\n"
-	             "contained instructions.\n", r);
+	             "contained instructions.</p>\n", r);
 	    break;
 	case HTTP_LOCKED:
-	    ap_rputs("The requested resource is currently locked.\n"
+	    ap_rputs("<p>The requested resource is currently locked.\n"
 	             "The lock must be released or proper identification\n"
-	             "given before the method can be applied.\n", r);
+	             "given before the method can be applied.</p>\n", r);
 	    break;
 	case HTTP_FAILED_DEPENDENCY:
-	    ap_rputs("The method could not be performed on the resource\n"
+	    ap_rputs("<p>The method could not be performed on the resource\n"
 	             "because the requested action depended on another\n"
-	             "action and that other action failed.\n", r);
+	             "action and that other action failed.</p>\n", r);
 	    break;
 	case HTTP_INSUFFICIENT_STORAGE:
-	    ap_rputs("The method could not be performed on the resource\n"
+	    ap_rputs("<p>The method could not be performed on the resource\n"
 	             "because the server is unable to store the\n"
 	             "representation needed to successfully complete the\n"
 	             "request.  There is insufficient free space left in\n"
-	             "your storage allocation.\n", r);
+	             "your storage allocation.</p>\n", r);
 	    break;
 	case HTTP_SERVICE_UNAVAILABLE:
-	    ap_rputs("The server is temporarily unable to service your\n"
+	    ap_rputs("<p>The server is temporarily unable to service your\n"
 	             "request due to maintenance downtime or capacity\n"
-	             "problems. Please try again later.\n", r);
+	             "problems. Please try again later.</p>\n", r);
 	    break;
 	case HTTP_GATEWAY_TIME_OUT:
-	    ap_rputs("The proxy server did not receive a timely response\n"
-	             "from the upstream server.\n", r);
+	    ap_rputs("<p>The proxy server did not receive a timely response\n"
+	             "from the upstream server.</p>\n", r);
 	    break;
 	case HTTP_NOT_EXTENDED:
-	    ap_rputs("A mandatory extension policy in the request is not\n"
-	             "accepted by the server for this resource.\n", r);
+	    ap_rputs("<p>A mandatory extension policy in the request is not\n"
+	             "accepted by the server for this resource.</p>\n", r);
 	    break;
 	default:            /* HTTP_INTERNAL_SERVER_ERROR */
 	    /*
@@ -3111,19 +3111,19 @@
 	    if (((error_notes = ap_table_get(r->notes, "error-notes")) != NULL)
 		&& (h1 = ap_table_get(r->notes, "verbose-error-to")) != NULL
 		&& (strcmp(h1, "*") == 0)) {
-	        ap_rvputs(r, error_notes, "<P>\n", NULL);
+		ap_rvputs(r, "<p>", error_notes, "</p>\n", NULL);
 	    }
 	    else {
-	        ap_rvputs(r, "The server encountered an internal error or\n"
+	        ap_rvputs(r, "<p>The server encountered an internal error or\n"
 	             "misconfiguration and was unable to complete\n"
-	             "your request.<P>\n"
-	             "Please contact the server administrator,\n ",
+	             "your request.</p>\n"
+	             "<p>Please contact the server administrator,\n ",
 	             ap_escape_html(r->pool, r->server->server_admin),
 	             " and inform them of the time the error occurred,\n"
 	             "and anything you might have done that may have\n"
-	             "caused the error.<P>\n"
-		     "More information about this error may be available\n"
-		     "in the server error log.<P>\n", NULL);
+	             "caused the error.</p>\n"
+		     "<p>More information about this error may be available\n"
+		     "in the server error log.</p>\n", NULL);
 	    }
 	 /*
 	  * It would be nice to give the user the information they need to
@@ -3135,20 +3135,20 @@
 	  * can figure out a way to remove the pathname, leave this commented.
 	  *
 	  * if ((error_notes = ap_table_get(r->notes, "error-notes")) != NULL) {
-	  *     ap_rvputs(r, error_notes, "<P>\n", NULL);
+          *     ap_rvputs(r, "<p>", error_notes, "</p>\n", NULL);
 	  * }
 	  */
 	    break;
 	}
 
         if (recursive_error) {
-            ap_rvputs(r, "<P>Additionally, a ",
+            ap_rvputs(r, "<p>Additionally, a ",
                       status_lines[ap_index_of_response(recursive_error)],
                       "\nerror was encountered while trying to use an "
-                      "ErrorDocument to handle the request.\n", NULL);
+                      "ErrorDocument to handle the request.</p>\n", NULL);
         }
-        ap_rputs(ap_psignature("<HR>\n", r), r);
-        ap_rputs("</BODY></HTML>\n", r);
+        ap_rputs(ap_psignature("<hr>\n", r), r);
+        ap_rputs("</body>\n</html>\n", r);
     }
     ap_kill_timeout(r);
     ap_finalize_request_protocol(r);
diff -urN apache_1.3.29/src/modules/standard/mod_autoindex.c apache_1.3.29_patched/src/modules/standard/mod_autoindex.c
--- apache_1.3.29/src/modules/standard/mod_autoindex.c	2003-02-04 02:13:27.000000000 +0900
+++ apache_1.3.29_patched/src/modules/standard/mod_autoindex.c	2003-11-01 20:34:54.000000000 +0900
@@ -198,9 +198,9 @@
  */
 static void emit_preamble(request_rec *r, char *title)
 {
-    ap_rvputs(r, DOCTYPE_HTML_3_2,
-	      "<HTML>\n <HEAD>\n  <TITLE>Index of ", title,
-	      "</TITLE>\n </HEAD>\n <BODY>\n", NULL);
+    ap_rvputs(r, DOCTYPE_HTML_4_01T,
+	      "<html>\n<head>\n<meta name=\"ROBOTS\" content=\"NOINDEX,NOFOLLOW\">\n<title>Index of ", title,
+	      "</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/icons/apache.css\">\n</head>\n<body>\n", NULL);
 }
 
 static void push_item(array_header *arr, char *type, char *to, char *path,
@@ -945,7 +945,7 @@
     char buf[IOBUFSIZE + 1];
     int i, n, c, ch;
 
-    ap_rputs("<PRE>\n", r);
+    ap_rputs("<pre>\n", r);
     while (!feof(f)) {
 	do {
 	    n = fread(buf, sizeof(char), IOBUFSIZE, f);
@@ -977,7 +977,7 @@
 	    c = i + 1;
 	}
     }
-    ap_rputs("</PRE>\n", r);
+    ap_rputs("</pre>\n", r);
 }
 
 /* See mod_include */
@@ -1058,7 +1058,7 @@
 	    else if (!strncasecmp("text/", rr->content_type, 5)) {
 		/*
 		 * If we can open the file, prefix it with the preamble
-		 * regardless; since we'll be sending a <PRE> block around
+		 * regardless; since we'll be sending a <pre> block around
 		 * the file's contents, any HTML header it had won't end up
 		 * where it belongs.
 		 */
@@ -1088,7 +1088,7 @@
 	emit_preamble(r, title);
     }
     if (emit_H1) {
-	ap_rvputs(r, "<H1>Index of ", title, "</H1>\n", NULL);
+	ap_rvputs(r, "<h1>Index of ", title, "</h1>\n", NULL);
     }
     if (rr != NULL) {
 	ap_destroy_sub_req(rr);
@@ -1182,7 +1182,7 @@
 	ap_rputs(ap_psignature("", r), r);
     }
     if (!suppress_post) {
-	ap_rputs("</BODY></HTML>\n", r);
+	ap_rputs("</body>\n</html>\n", r);
     }
     if (rr != NULL) {
 	ap_destroy_sub_req(rr);
@@ -1192,7 +1192,7 @@
 
 static char *find_title(request_rec *r)
 {
-    char titlebuf[MAX_STRING_LEN], *find = "<TITLE>";
+    char titlebuf[MAX_STRING_LEN], *find = "<title>";
     FILE *thefile = NULL;
     int x, y, n, p;
 
@@ -1390,7 +1390,7 @@
 	qvalue[4] = '\0';
 	reverse = ((curkey == fname) && (curdirection == D_ASCENDING));
 	qvalue[3] = reverse ? D_DESCENDING : D_ASCENDING;
-	ap_rvputs(r, "<A HREF=\"", qvalue, "\">", anchor, "</A>", NULL);
+	ap_rvputs(r, "<a href=\"", qvalue, "\">", anchor, "</a>", NULL);
     }
     else {
         ap_rputs(anchor, r);
@@ -1441,15 +1441,15 @@
     pad_scratch[name_width] = '\0';
 
     if (autoindex_opts & FANCY_INDEXING) {
-	ap_rputs("<PRE>", r);
+	ap_rputs("<pre>", r);
 	if ((tp = find_default_icon(d, "^^BLANKICON^^"))) {
-	    ap_rvputs(r, "<IMG SRC=\"", ap_escape_html(scratch, tp),
-		   "\" ALT=\"     \"", NULL);
+	    ap_rvputs(r, "<img src=\"", ap_escape_html(scratch, tp),
+		   "\" alt=\"     \"", NULL);
 	    if (d->icon_width && d->icon_height) {
 		ap_rprintf
 		    (
 			r,
-			" HEIGHT=\"%d\" WIDTH=\"%d\"",
+			" height=\"%d\" width=\"%d\"",
 			d->icon_height,
 			d->icon_width
 		    );
@@ -1475,10 +1475,10 @@
             emit_link(r, "Description", K_DESC, keyid, direction,
                       static_columns);
 	}
-	ap_rputs("\n<HR>\n", r);
+	ap_rputs("\n<hr>\n", r);
     }
     else {
-	ap_rputs("<UL>", r);
+	ap_rputs("<ul>", r);
     }
 
     for (x = 0; x < n; x++) {
@@ -1504,23 +1504,23 @@
 
 	if (autoindex_opts & FANCY_INDEXING) {
 	    if (autoindex_opts & ICONS_ARE_LINKS) {
-		ap_rvputs(r, "<A HREF=\"", anchor, "\">", NULL);
+		ap_rvputs(r, "<a href=\"", anchor, "\">", NULL);
 	    }
 	    if ((ar[x]->icon) || d->default_icon) {
-		ap_rvputs(r, "<IMG SRC=\"",
+		ap_rvputs(r, "<img src=\"",
 			  ap_escape_html(scratch,
 					 ar[x]->icon ? ar[x]->icon
 					             : d->default_icon),
-			  "\" ALT=\"[", (ar[x]->alt ? ar[x]->alt : "   "),
+			  "\" alt=\"[", (ar[x]->alt ? ar[x]->alt : "   "),
 			  "]\"", NULL);
 		if (d->icon_width && d->icon_height) {
-		    ap_rprintf(r, " HEIGHT=\"%d\" WIDTH=\"%d\"",
+		    ap_rprintf(r, " height=\"%d\" width=\"%d\"",
 			       d->icon_height, d->icon_width);
 		}
 		ap_rputs(">", r);
 	    }
 	    if (autoindex_opts & ICONS_ARE_LINKS) {
-		ap_rputs("</A>", r);
+		ap_rputs("</a>", r);
 	    }
 
 	    nwidth = strlen(t2);
@@ -1533,8 +1533,8 @@
 		t2 = name_scratch;
 		nwidth = name_width;
 	    }
-	    ap_rvputs(r, " <A HREF=\"", anchor, "\">",
-		      ap_escape_html(scratch, t2), "</A>",
+	    ap_rvputs(r, " <a href=\"", anchor, "\">",
+		      ap_escape_html(scratch, t2), "</a>",
 		      pad_scratch + nwidth, NULL);
 	    /*
 	     * The blank before the storm.. er, before the next field.
@@ -1565,16 +1565,16 @@
 	    }
 	}
 	else {
-	    ap_rvputs(r, "<LI><A HREF=\"", anchor, "\"> ", t2,
-		      "</A>", NULL);
+	    ap_rvputs(r, "<li><a href=\"", anchor, "\"> ", t2,
+		      "</a></li>", NULL);
 	}
 	ap_rputc('\n', r);
     }
     if (autoindex_opts & FANCY_INDEXING) {
-	ap_rputs("</PRE>", r);
+	ap_rputs("</pre>", r);
     }
     else {
-	ap_rputs("</UL>", r);
+	ap_rputs("</ul>", r);
     }
 }
 
@@ -1784,7 +1784,7 @@
     ap_pclosedir(r->pool, d);
 
     if (autoindex_opts & FANCY_INDEXING) {
-	ap_rputs("<HR>\n", r);
+	ap_rputs("<hr>\n", r);
     }
     emit_tail(r, find_readme(autoindex_conf, r),
 	      autoindex_opts & SUPPRESS_PREAMBLE);
